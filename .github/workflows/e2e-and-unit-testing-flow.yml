name: E2E and Unit Testing Flow
on:
  pull_request:
    branches:
      - develop

jobs:
#  set_test_env_polkadot_node:
#    name: Set test environment - Polkadot-node
#    runs-on: ubuntu-latest
#    steps:
#      - name: Clone Polkadot-node
#        run: |
#          git clone https://github.com/paritytech/polkadot.git
#
#      - name: Cache binary file for Polkadot-node
#        id: cache-bin-polkadot-node
#        uses: actions/cache@v2
#        with:
#          path: polkadot/target/release
#          key: bin-polkadot-node-3-${{ hashFiles('polkadot/Cargo.lock') }}
#
#      - name: Fetch Polkadot-node bin file
#        if: steps.cache-bin-polkadot-node.outputs.cache-hit != 'true'
#        run: |
#          cd polkadot
#          mkdir -p target
#          cd target
#          mkdir -p release
#          cd release
#          wget https://github.com/paritytech/polkadot/releases/download/v0.9.13/polkadot
#
#      - name: Make Polkadot-node bin executable
#        run: |
#          cd polkadot/target/release
#          chmod +x polkadot
#
#      - name: Save artifacts - Polkadot-node
#        uses: actions/upload-artifact@v2
#        with:
#          name: polkadot-node-artifacts
#          path: ./polkadot/target/release
#
#  set_test_env_basilisk_node:
#    name: Set test environment - Basilisk-node
#    runs-on: ubuntu-latest
#    steps:
#      - name: Clone Basilisk-node
#        run: |
#          git clone https://github.com/galacticcouncil/Basilisk-node.git
#
#      - name: Cache binary file for Basilisk-node
#        id: cache-bin-basilisk-node
#        uses: actions/cache@v2
#        with:
#          path: Basilisk-node/target/release
#          key: bin-basilisk-node-5-${{ hashFiles('Basilisk-node/Cargo.lock') }}
#
#      - name: Fetch Basilisk-node bin file
#        if: steps.cache-bin-basilisk-node.outputs.cache-hit != 'true'
#        run: |
#          cd Basilisk-node
#          mkdir -p target
#          cd target
#          mkdir -p release
#          cd release
#          wget https://github.com/galacticcouncil/Basilisk-node/releases/download/v6.0.0/basilisk
#          cp -v basilisk testing-basilisk
#          ls
#
#      - name: Make Basilisk-node bin executable
#        run: |
#          cd Basilisk-node/target/release
#          chmod +x basilisk
#          chmod +x testing-basilisk
#
#      - name: Save artifacts - Basilisk-node
#        uses: actions/upload-artifact@v2
#        with:
#          name: basilisk-node-artifacts
#          path: ./Basilisk-node

  build_app:
    name: Build UI application
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Cache Node Modules for ui-app
        id: cache-node-modules-ui-app
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-ui-app-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies for ui-app
        if: steps.cache-node-modules-ui-app.outputs.cache-hit != 'true'
        run: rm -rf node_modules && yarn install --frozen-lockfile

      - name: Update browserslist
        run: npx browserslist@latest --update-db

      - name: Build App
        run: yarn run build:deployment
        env:
          CI: false

      - name: Upload script files
        uses: actions/upload-artifact@v2
        with:
          name: script-files
          path: ./scripts

      - name: Upload production-ready App build files
        uses: actions/upload-artifact@v2
        with:
          name: app-build-files
          path: ./build

  # run_tests:
  #   name: Run tests
  #   runs-on: ubuntu-latest
  #   needs: [set_test_env_polkadot_node, set_test_env_basilisk_node, build_app]
  #   steps:
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.x

  #     - name: Install Node.js HTTP-Server
  #       run: npm install -g http-server

  #     - name: Download artifact - Basilisk-node
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: basilisk-node-artifacts
  #         path: ./Basilisk-node

  #     - name: Download artifact - Polkadot-node
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: polkadot-node-artifacts
  #         path: ./polkadot/target/release

  #     - uses: actions/checkout@v2
  #       with:
  #         path: 'ui-app'

  #     - name: Download artifact - UI app build
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: app-build-files
  #         path: ./ui-app/build

  #     # Prepare Basilisk-api

  #     - name: Clone Basilisk-api
  #       run: git clone -b develop https://github.com/galacticcouncil/Basilisk-api.git

  #     - name: Cache Node Modules for Basilisk-api
  #       id: cache-node-modules-basilisk-api
  #       uses: actions/cache@v2
  #       with:
  #         path: Basilisk-api/node_modules
  #         key: node-modules-basilisk-api-${{ hashFiles('Basilisk-api/yarn.lock') }}

  #     - name: Install Dependencies for Basilisk-api
  #       if: steps.cache-node-modules-basilisk-api.outputs.cache-hit != 'true'
  #       run: |
  #         cd Basilisk-api
  #         yarn

  #     # Prepare UI-app

  #     # Install NPM deps for running tests
  #     - name: Cache Node Modules for ui-app
  #       id: cache-node-modules-ui-app
  #       uses: actions/cache@v2
  #       with:
  #         path: ui-app/node_modules
  #         key: node-modules-ui-app-${{ hashFiles('ui-app/yarn.lock') }}

  #     - name: Install Dependencies for ui-app
  #       if: steps.cache-node-modules-ui-app.outputs.cache-hit != 'true'
  #       run: |
  #         cd ui-app
  #         yarn

  #     # Update folders structure

  #     - name: Change folders permissions
  #       run: |
  #         chmod -R 777 polkadot
  #         chmod -R 777 Basilisk-node
  #         chmod -R 777 Basilisk-api
  #         chmod -R 777 ui-app

  #     # Prepare Rust Env

  #     - name: Configure Rust Env
  #       run: curl https://getsubstrate.io -sSf | bash -s -- --fast

  #     # Run tests

  #     - name: Run testnet
  #       shell: bash
  #       run: |
  #         cd Basilisk-api
  #         yarn testnet:start &

  #     - name: Sleep for 10 seconds
  #       run: sleep 10s
  #       shell: bash

  #     - name: Run UI application
  #       shell: bash
  #       run: |
  #         cd ui-app/build
  #         http-server -s -p 3000 -a 127.0.0.1 &

  #     - name: Sleep for 10 seconds
  #       run: sleep 10s
  #       shell: bash

  #     - name: Install OS dependencies for Playwright
  #       run: npx playwright install-deps

  #     - name: Make e2e testing env vars file visible
  #       run: mv ui-app/.env.test.e2e.ci ui-app/e2e-tests-vars.txt
  #       shell: bash

  #     - name: Prepate E2E Tests Env Variables
  #       uses: falnyr/replace-env-vars-action@master
  #       env:
  #         E2E_TEST_ACCOUNT_NAME_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_NAME_ALICE }}
  #         E2E_TEST_ACCOUNT_PASSWORD_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_PASSWORD_ALICE }}
  #         E2E_TEST_ACCOUNT_SEED_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_SEED_ALICE }}
  #       with:
  #         filename: ui-app/e2e-tests-vars.txt

  #     - name: Make e2e testing env vars file hidden
  #       run: mv ui-app/e2e-tests-vars.txt ui-app/.env.test.e2e.ci
  #       shell: bash

  #     - name: Run e2e tests
  #       shell: bash
  #       run: |
  #         cd ui-app
  #         DEBUG=pw:browser* HEADFUL=true xvfb-run --auto-servernum -- yarn test:e2e-ci
  #       env:
  #         PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}

  #     - name: Sleep for 5 seconds
  #       run: sleep 5s
  #       shell: bash

  #     - name: Upload trace files
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: traces_screenshots
  #         path: ./ui-app/traces

  #     - name: Upload e2e tests report file
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: e2e_tests_report_html
  #         path: ./ui-app/ui-app-e2e-results.html

  #     - name: Run unit tests
  #       if: always()
  #       run: |
  #         cd ui-app
  #         yarn test:ci

  #     - name: Sleep for 5 seconds
  #       run: sleep 5s
  #       shell: bash

  #     - name: Upload unit tests report file
  #       if: always()
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: unint_tests_report_html
  #         path: ./ui-app/ui-app-unit-tests-results.html

  #     - name: Stop testnet
  #       if: always()
  #       shell: bash
  #       run: |
  #         killall -q -v polkadot
  #         killall -q -v testing-basilisk

#  purge_testnet_artifacts:
#    name: Purge testnet artifacts
#    if: ${{ always() }}
#    runs-on: ubuntu-latest
#    needs: [set_test_env_polkadot_node, ]
#    steps:
#      - uses: geekyeggo/delete-artifact@v1
#        with:
#          name: |
#            basilisk-node-artifacts
#            polkadot-node-artifacts
#          failOnError: false
