name: Publish reports in PR and Discord

on:
  workflow_call:
    inputs:
      base-branch-codecov-artifact-name:
        required: false
        type: string
      working-branch-codecov-artifact-name:
        required: false
        type: string

      app-build-pub-in-discord:
        required: true
        type: boolean
      app-build-status:
        required: false
        type: boolean

      app-sb-deploy-pub-report-in-discord:
        required: true
        type: boolean
      app-sb-deploy-status:
        required: false
        type: boolean

      app-unit-test-pub-report-in-pr:
        required: false
        type: boolean
      app-unit-test-pub-report-in-discord:
        required: false
        type: boolean
      app-unit-test-status:
        required: false
        type: boolean


      publish-pr-comment:
        required: true
        type: boolean
      publish-discord-alert:
        required: true
        type: boolean
    secrets:
      gh_token:
        required: true
      gh_pages_full_branch:
        required: true
      discord_alert_ui_web_hook:
        required: true
      barecheck_github_app_token:
        required: true

jobs:
  app-unit-tests-codecov-pub-report:
    name: Publish App unit test codecov reports
    runs-on: ubuntu-latest
    outputs:
      codecov_output_percentage: ${{ steps.code-coverage.outputs.percentage }}
      codecov_output_diff: ${{ steps.code-coverage.outputs.diff }}
    steps:
      - name: Download code coverage report from base branch
        uses: actions/download-artifact@v2
        id: download-ref
        with:
          name: ${{inputs.base-branch-codecov-artifact-name}}
          path: ./ref-report

      - name: Download code coverage report from working branch
        uses: actions/download-artifact@v2
        id: download-working
        with:
          name: ${{inputs.working-branch-codecov-artifact-name}}
          path: ./working-report

      - name: Post coverage report in PR
        id: code-coverage
        continue-on-error: true
        uses: barecheck/code-coverage-action@v0.5.1
        with:
          barecheck-github-app-token: ${{ secrets.barecheck_github_app_token }}
          lcov-file: './working-report/lcov.info'
          base-lcov-file: './ref-report/lcov.info'
#          send-summary-comment: ${{ inputs.app-unit-test-pub-report-in-pr }}
          send-summary-comment: false
          show-annotations: 'warning'


  publish-summary-report-issue-comment:
    name: Publish summary report as issue comment
    needs: [ app-unit-tests-codecov-pub-report ]
    if: ${{ inputs.publish-pr-comment == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v6
        env:
          IS_APP_SB_BUILD_REPORT: ${{ inputs.app-build-pub-in-discord }}
          IS_APP_UNIT_TEST_REPORT: ${{ inputs.app-unit-test-pub-report-in-discord }}
          IS_APP_E2E_TEST_REPORT: false
          IS_SB_UNIT_TEST_REPORT: false
          IS_SB_E2E_TEST_REPORT: false
          IS_APP_SB_DEPLOYMENT_REPORT: ${{ inputs.app-sb-deploy-pub-report-in-discord }}

          APP_UNIT_TEST_PERCENTAGE: ${{ needs.app-unit-tests-codecov-pub-report.outputs.codecov_output_percentage }}
          APP_UNIT_TEST_DIFF: ${{ needs.app-unit-tests-codecov-pub-report.outputs.codecov_output_diff }}

          APP_BUILD_STATUS: ${{ inputs.app-build-status }}
          APP_UNIT_TEST_STATUS: ${{ inputs.app-unit-test-status }}

          APP_DEPLOYMENT_STATUS: ${{ inputs.app-sb-deploy-status }}

#          GITHUB_HEAD_REF: ${{ secrets.GITHUB_HEAD_REF }}
#          GITHUB_REF: ${{ secrets.GITHUB_REF }}
#          GITHUB_REF_NAME: ${{ secrets.GITHUB_REF_NAME }}
        with:
          script: |
            const script = require('./scripts/ci/github-script-src/publish-issue-comment.js')
            await script({github, context, core})


  publish-summary-report-discord:
    name: Publish summary report to Discord
    needs: [app-unit-tests-codecov-pub-report]
    if: ${{ inputs.publish-discord-alert == true }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v6
        id: discord_embed_report
        env:
          IS_APP_SB_BUILD_REPORT: ${{ inputs.app-build-pub-in-discord }}
          IS_APP_UNIT_TEST_REPORT: ${{ inputs.app-unit-test-pub-report-in-discord }}
          IS_APP_E2E_TEST_REPORT: false
          IS_SB_UNIT_TEST_REPORT: false
          IS_SB_E2E_TEST_REPORT: false
          IS_APP_SB_DEPLOYMENT_REPORT: ${{ inputs.app-sb-deploy-pub-report-in-discord }}

          APP_UNIT_TEST_PERCENTAGE: ${{ needs.app-unit-tests-codecov-pub-report.outputs.codecov_output_percentage }}
          APP_UNIT_TEST_DIFF: ${{ needs.app-unit-tests-codecov-pub-report.outputs.codecov_output_diff }}
          APP_BUILD_STATUS: ${{ inputs.app-build-status }}
          APP_UNIT_TEST_STATUS: ${{ inputs.app-unit-test-status }}

          APP_DEPLOYMENT_STATUS: ${{ inputs.app-sb-deploy-status }}

          GITHUB_HEAD_REF: ${{ secrets.GITHUB_HEAD_REF }}
          GITHUB_REF: ${{ secrets.GITHUB_REF }}
          GITHUB_REF_NAME: ${{ secrets.GITHUB_REF_NAME }}
        with:
          result-encoding: string
          script: |
            const script = require('./scripts/ci/github-script-src/create-discord-report-embed-body.js')
            return await script({github, context, core})

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_ALERT_UI_WEB_HOOK }}
          DISCORD_USERNAME: Basilisk-UI GH Bot
          DISCORD_EMBEDS: ${{ steps.discord_embed_report.outputs.result }}
        uses: Ilshidur/action-discord@master
