# This workflow can be invoked only from caller workflow.
# More information about Reusing workflows - https://docs.github.com/en/actions/using-workflows/reusing-workflows

# Run End-To-End tests in Application.
name: 'Reusable :: E2E tests :: App'

on:
  workflow_call:
    inputs:
      # Application build files artifact name
      app-build-artifact-name:
        required: true
        type: string

jobs:
  # Run E2E tests
  run:
    name: 'Run'
    runs-on: ubuntu-latest
    steps:
      - name: 'Setup Node.js'
        uses: actions/setup-node@v2
        with:
          node-version: 17

      # HTTP-Server is necessary for running UI Application built files
      - name: 'Install Node.js HTTP-Server'
        run: yarn global add http-server

      - uses: actions/checkout@v2
        with:
          path: 'ui-app'

      # Download artifacts with App build
      - name: 'Download UI app build'
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.app-build-artifact-name }}
          path: ./ui-app/build

      # Clone Basilisk-api project required for running testnet sandbox
      # "feature/dockerize-testnet" branch contains feature of running testnet sandbox in Docker container from prebuilt
      # image - https://hub.docker.com/repository/docker/mckrava/polkadot-basilisk-testnet-sandbox-multiarch/general
      # Checking out to "feature/dockerize-testnet" branch the is temporary solution, "develop" branch must be used
      # after merge current feature into "develop".
      - name: 'Clone Basilisk-api'
        run: git clone -b feature/dockerize-testnet https://github.com/galacticcouncil/Basilisk-api.git

      # | Restore cached Node modules for Basilisk-api.
      - name: 'Restore cached Node modules'
        id: cache-node-modules-basilisk-api
        uses: actions/cache@v2
        with:
          path: Basilisk-api/node_modules
          key: node-modules-basilisk-api-${{ hashFiles('Basilisk-api/yarn.lock') }}

      - name: 'Install Node modules for Basilisk-api'
        if: steps.cache-node-modules-basilisk-api.outputs.cache-hit != 'true'
        run: |
          cd Basilisk-api
          yarn install --frozen-lockfile

      # | Restore cached Node modules for ui-app.
      - name: 'Restore cached Node modules'
        id: cache-node-modules-ui-app
        uses: actions/cache@v2
        with:
          path: ui-app/node_modules
          key: node-modules-ui-app-${{ hashFiles('ui-app/yarn.lock') }}

      - name: 'Install Node modules for App'
        if: steps.cache-node-modules-ui-app.outputs.cache-hit != 'true'
        run: |
          cd ui-app
          yarn install --frozen-lockfile

      # | Change CI scripts files permissions to prevent "Permission denied" error.
      - name: 'Change folders permissions'
        run: chmod -R 777 ui-app/scripts/ci

      - name: 'Run sandbox testnet'
        timeout-minutes: 10
        shell: bash
        run: |
          cd Basilisk-api
          yarn fullruntime:clean-setup-start

      # | Double check of testnet status
      # | We need to use custom script for waiting port because existing tools work unstable with Node.js 17
      - name: 'Wait for Basilisk Node port :9988'
        timeout-minutes: 2
        shell: bash
        run: . ./ui-app/scripts/ci/gh-actions-wait-for-port.sh 9988

      - name: 'Run UI application'
        shell: bash
        run: |
          cd ui-app/build
          http-server -s -p 3030 -a 127.0.0.1 &

      # | Check of UI app status
      # | We need to use custom script for waiting port because existing tools work unstable with Node.js 17
      - name: 'Wait for UI app port :3030'
        timeout-minutes: 2
        shell: bash
        run: . ./ui-app/scripts/ci/gh-actions-wait-for-port.sh 3030

      - name: 'Install OS dependencies for Playwright'
        run: npx playwright install-deps

      - name: 'Make e2e testing env vars file visible (required for falnyr/replace-env-vars-action@master)'
        shell: bash
        run: mv ui-app/.env.test.e2e.ci ui-app/e2e-tests-vars.txt

      - name: 'Prepare E2E Tests Env Variables'
        uses: falnyr/replace-env-vars-action@master
        env:
          E2E_TEST_ACCOUNT_NAME_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_NAME_ALICE }}
          E2E_TEST_ACCOUNT_PASSWORD_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_PASSWORD_ALICE }}
          E2E_TEST_ACCOUNT_SEED_ALICE: ${{ secrets.E2E_TEST_ACCOUNT_SEED_ALICE }}
        with:
          filename: ui-app/e2e-tests-vars.txt

      - name: 'Make e2e testing env vars file hidden'
        shell: bash
        run: mv ui-app/e2e-tests-vars.txt ui-app/.env.test.e2e.ci

      - name: 'Run e2e tests'
        shell: bash
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ github.event.deployment_status.target_url }}
        run: |
          cd ui-app
          DEBUG=pw:browser* HEADFUL=true xvfb-run --auto-servernum -- yarn test:e2e-ci

      - name: 'Sleep for 30 seconds (for compiling html reports)'
        shell: bash
        run: sleep 30s

      - name: 'Upload trace files'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-e2e-tests-traces-screenshots
          path: ./ui-app/traces

      - name: 'Upload e2e tests report file'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-e2e-tests-report-html
          path: ./ui-app/ui-app-e2e-results.html

      - name: 'Upload testnet logs'
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-e2e-tests-testnet-sandbox-logs
          path: ./Basilisk-api/testnet-sandbox-logs
